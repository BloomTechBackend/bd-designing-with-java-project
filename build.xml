<?xml version="1.0"?>

<project name="ATACurriculumSustainabilityShipmentServiceLambda-C2020July" basedir="." default="release" xmlns:ht="happytrails" xmlns:coral="antlib:com.amazon.coral">

  <!-- Determine if this is a developer local build box -->
  <condition property="onmac">
    <os family="mac"/>
  </condition>

  <import file="${happytrails.root}/happytrails.xml"/>
  <ht:import file="validate-classpath.xml" />
  <property name="ht.include.cfg" value="true" />

  <property name="checkstyle.configuration.file" value="${bp:[ATACheckstyle]pkg.src}/configuration/checkstyle/checkstyle.xml"/>
  <property name="checkstyle.suppression.filter" value="${bp:[ATACheckstyle]pkg.src}/configuration/checkstyle/unit2/suppressions.xml"/>

  <ht:import file="code-coverage-police-local.xml" />
  <property name="codecoveragepolice.runafterrelease" value="true" />

  <property name="findbugs.failOnError" value="true" />
  <property name="checkstyle.failOnError" value="true" />

  <property name="unit.test.minimum.coverage.lines" value="0.80"/>
  <property name="unit.test.minimum.coverage.branches" value="0.80"/>

  <!-- export a test code JAR as well for introspection test purposes -->
  <property name="ht.include.test.jar" value="true" />

  <!-- Define HappierTrails property overrides here -->
  <property name="tests.additional.jvmargs" value=""/>
  <property name="coral-src.dir" location="${output.dir}/private/src" />
  <property name="coral-tst.dir" location="${output.dir}/private/tst" />

  <ht:import file="happier-trails.xml"/>

  <ht:import file="coral-generator.xml" optional="false"/>
  <property name="coral-model-package" value="ATACurriculumSustainabilityShipmentServiceModel" />
  <!-- Generate the service types, explorer, model index, and abstract activities -->
  <target name="generate">
    <mkdir dir="${coral-src.dir}" />
    <!-- Generate the source -->
    <coral:generate dir="${coral-src.dir}" mode="types,index" stalecheck="true">
      <package name="${coral-model-package}"/>
    </coral:generate>
    <!-- Compile the coral source -->
    <ht:compile srcdir="${coral-src.dir}" destdir="${generated.classes.dir}" />
  </target>
  <target name="compile" depends="generate,standard-compile" />
  
  <target name="validate-classpath">
    <ht:validateClasspath classpath="${bp:run.classpath}" failOnConflicts="false" />
  </target>

  <target name="release" depends="standard-release,validate-classpath" />

  <target name="copy-project-scripts" extensionOf="ht-post-compile" if="onmac">
    <echo>Copying rde scripts</echo>
    <mkdir dir="${basedir}/configuration/stack-exec"/>
    <copy todir="${basedir}/configuration/stack-exec" overwrite="true">
      <fileset dir="${bp:[ATACurriculum_JavaProjectResources]pkg.configfarm.scripts}/scripts/rde"/>
      <flattenmapper/>
    </copy>

    <echo>Overwriting local repositories git hooks.</echo>
    <symlink link="${basedir}/.git/hooks/pre-push"
             resource="${bp:[ATACurriculum_JavaProjectResources]pkg.configfarm.scripts}/scripts/git-hooks/pre-push" overwrite="true" />
    <symlink link="${basedir}/.git/hooks/prepare-commit-msg"
             resource="${bp:[ATACurriculum_JavaProjectResources]pkg.configfarm.scripts}/scripts/git-hooks/prepare-commit-msg" overwrite="true" />
    <symlink link="${basedir}/.git/hooks/commit-msg"
             resource="${bp:[ATACurriculum_JavaProjectResources]pkg.configfarm.scripts}/scripts/git-hooks/commit-msg" overwrite="true" />
  </target>

</project>
